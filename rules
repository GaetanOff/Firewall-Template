#!/bin/sh

# ==================================================
# Firewall Rules by Gaetan
# Discord: 'gaetandev' for support
# Version: 1.4
# ==================================================
#
# DISCLAIMER:
# - Use these rules at your own risk.
# - Ensure your hosting provider allows these rules.
# - These rules do not replace a network anti-DDoS protection.
# - Modify the "Whitelist your own port" section as needed.
#
# ==================================================

echo "[Firewall] Loading..."

# ==================================================
# Define variables
# ==================================================
IPTABLES="sudo iptables"
IPSET="sudo ipset"
MINECRAFT_PORT="25565"
SSH_PORT="52839"
BURSTCONNSTIMESTAMP=3 # Limits new connections per second with timestamp.
                      # Useful against attacks and spambots.

# ==================================================
# Reset rules
# ==================================================
$IPTABLES -t filter -F
$IPTABLES -t filter -X
$IPTABLES -t mangle -F
$IPTABLES -t mangle -X
$IPTABLES -t raw -F
$IPTABLES -t raw -X
echo "[Firewall] Rules reset."

# Default policy: allow all traffic temporarily
$IPTABLES -t filter -P INPUT ACCEPT
$IPTABLES -t filter -P FORWARD ACCEPT
$IPTABLES -t filter -P OUTPUT ACCEPT
echo "[Firewall] All traffic temporarily allowed."

$IPTABLES -N DOCKER
$IPTABLES -F DOCKER

# ==================================================
# TCP handshake protection
# ==================================================
$IPTABLES -t mangle -A PREROUTING -p tcp -m conntrack --ctstate ESTABLISHED -j ACCEPT
$IPTABLES -t mangle -A PREROUTING -p tcp ! --tcp-flags ALL SYN -j DROP
echo "[Firewall] TCP handshake protection enabled."

# Drop invalid packets
$IPTABLES -t mangle -A PREROUTING -m conntrack --ctstate INVALID -j DROP
echo "[Firewall] Dropping invalid packets."

# ==================================================
# Whitelist allowed ports
# ==================================================
$IPSET -exist destroy cloudflare
$IPSET create cloudflare hash:net
curl -s https://www.cloudflare.com/ips-v4 | while read line; do $IPSET add cloudflare $line; done

$IPTABLES -A INPUT -p tcp --dport 443 -m set --match-set cloudflare src -j ACCEPT
$IPTABLES -A INPUT -p tcp --dport 443 -j DROP
echo "[Firewall] Cloudflare HTTPS whitelist applied."

# Specific whitelist (example: MariaDB)
for ip in 127.0.0.1 1.1.1.1; do
    $IPTABLES -A INPUT -p tcp --dport 3306 -s $ip -j ACCEPT
done
$IPTABLES -A INPUT -p tcp --dport 3306 -j DROP
echo "[Firewall] MariaDB whitelist applied."

# ==================================================
# Connection rate limiting per IP
# ==================================================
$IPTABLES -A INPUT -p tcp --dport $SSH_PORT -m conntrack --ctstate NEW -m recent --set
$IPTABLES -A INPUT -p tcp --dport $SSH_PORT -m conntrack --ctstate NEW -m recent --update --seconds 60 --hitcount 10 -j DROP
echo "[Firewall] SSH connection rate limiting enabled."

# ==================================================
# Experimental rules (Use with caution)
# /!\ Don't use it with TCPShield, HAProxy (or alternatives..) /!\
# ==================================================
$IPTABLES -t mangle -A PREROUTING -p tcp --dport $MINECRAFT_PORT -m tcp --syn --tcp-option 8 -m limit --limit $BURSTCONNSTIMESTAMP/s -j ACCEPT
$IPTABLES -t mangle -A PREROUTING -p tcp --dport $MINECRAFT_PORT -m tcp --syn --tcp-option 8 -j DROP
echo "[Firewall] TCP Timestamp flood protection for Minecraft port applied."

# Connection rate limiting per IP (anti-spam)
$IPTABLES -t mangle -A PREROUTING -p tcp --dport $MINECRAFT_PORT -m state --state NEW -m recent --set --name MINECRAFT --mask 255.255.255.255 --rsource
$IPTABLES -t mangle -A PREROUTING -p tcp --dport $MINECRAFT_PORT -m state --state NEW -m recent --update --seconds 3 --hitcount 20 --name MINECRAFT --mask 255.255.255.255 --rsource -j DROP
echo "[Firewall] TCP Basic flood protection for Minecraft port applied."

# ==================================================
echo "[Firewall] Configuration successfully completed."
